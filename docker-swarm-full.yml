# Full system for implementing sharded MongoDB storage
# - Config DB is a replica set with 3 replicas
# - 3 shards
#   -> Each shard is a replica set with 3 replicas

version: '3'

services:
  # Web server
  reco-storage-web:
    image: reco-storage-webapp
    depends_on:
      - reco-storage-router 
    deploy:
      replicas: 1

  # MongoDB shard router
  reco-storage-router:
    image: reco-storage-mongodb
    entrypoint:
      - mongos
      - --configdb
      - configset/config-r0:27017,config-r1:27017,config-r2:27017
    depends_on:
      - config-r0
      - config-r1
      - config-r2
    deploy:
      replicas: 1

  # Config replica set
  config-r0:
    image: reco-storage-mongodb
    volumes:
      - ~/config/r0:/data/db
    entrypoint:
      - mongod
      - --configsvr
      - --replSet
      - "configset"
      - --dbpath
      - /data/db
      - --smallfiles
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.label.config == true
          - node.label.replicanum == 0

  config-r1:
    image: reco-storage-mongodb
    volumes:
      - ~/config/r1:/data/db
    entrypoint:
      - mongod
      - --configsvr
      - --replSet
      - "configset"
      - --dbpath
      - /data/db
      - --smallfiles
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.label.config == true
          - node.label.replicanum == 1

  config-r2:
    image: reco-storage-mongodb
    volumes:
      - ~/config/r2:/data/db
    entrypoint:
      - mongod
      - --configsvr
      - --replSet
      - "configset"
      - --dbpath
      - /data/db
      - --smallfiles
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.label.config == true
          - node.label.replicanum == 2
  
  # Shard 0 replica set
  shard0-r0:
    image: reco-storage-mongodb
    volumes:
      - ~/shard0/r0:/data/db
    entrypoint:
      - mongod
      - --replSet
      - "shard0set"
      - --dbpath
      - /data/db
      - --smallfiles
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.label.shard0 == true
          - node.label.replicanum == 0

  shard0-r1:
    image: reco-storage-mongodb
    volumes:
      - ~/shard0/r1:/data/db
    entrypoint:
      - mongod
      - --replSet
      - "shard0set"
      - --dbpath
      - /data/db
      - --smallfiles
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.label.shard0 == true
          - node.label.replicanum == 1

  shard0-r2:
    image: reco-storage-mongodb
    volumes:
      - ~/shard0/r2:/data/db
    entrypoint:
      - mongod
      - --replSet
      - "shard0set"
      - --dbpath
      - /data/db
      - --smallfiles
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.label.shard0 == true
          - node.label.replicanum == 2

  # Shard 1 replica set
  shard1-r0:
    image: reco-storage-mongodb
    volumes:
      - ~/shard1/r0:/data/db
    entrypoint:
      - mongod
      - --replSet
      - "shard1set"
      - --dbpath
      - /data/db
      - --smallfiles
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.label.shard1 == true
          - node.label.replicanum == 0

  shard1-r1:
    image: reco-storage-mongodb
    volumes:
      - ~/shard1/r1:/data/db
    entrypoint:
      - mongod
      - --replSet
      - "shard1set"
      - --dbpath
      - /data/db
      - --smallfiles
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.label.shard1 == true
          - node.label.replicanum == 1

  shard1-r2:
    image: reco-storage-mongodb
    volumes:
      - ~/shard1/r2:/data/db
    entrypoint:
      - mongod
      - --replSet
      - "shard1set"
      - --dbpath
      - /data/db
      - --smallfiles
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.label.shard1 == true
          - node.label.replicanum == 2

  # Shard 2 replica set
  shard2-r0:
    image: reco-storage-mongodb
    volumes:
      - ~/shard2/r0:/data/db
    entrypoint:
      - mongod
      - --replSet
      - "shard2set"
      - --dbpath
      - /data/db
      - --smallfiles
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.label.shard2 == true
          - node.label.replicanum == 0

  shard2-r1:
    image: reco-storage-mongodb
    volumes:
      - ~/shard2/r1:/data/db
    entrypoint:
      - mongod
      - --replSet
      - "shard2set"
      - --dbpath
      - /data/db
      - --smallfiles
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.label.shard2 == true
          - node.label.replicanum == 1

  shard2-r2:
    image: reco-storage-mongodb
    volumes:
      - ~/shard2/r2:/data/db
    entrypoint:
      - mongod
      - --replSet
      - "shard2set"
      - --dbpath
      - /data/db
      - --smallfiles
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.label.shard2 == true
          - node.label.replicanum == 2

