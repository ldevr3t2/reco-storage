# Full system for implementing sharded MongoDB storage
# - Config DB is a replica set with 3 replicas
# - 3 shards
#   -> Each shard is a replica set with 3 replicas

version: '3'

services:
  # mongo-setup:
  #   image: reco-storage-setup
  #   deploy:
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.role == manager

  # Web server
  reco-storage-web:
    image: reco-storage-webapp
    ports:
      - "8080:8080"
    depends_on:
      - reco-storage-router
    networks:
      - mainnet
    deploy:
      replicas: 1

  # MongoDB shard router
  reco-storage-router:
    image: reco-storage-mongodb
    entrypoint:
      - /home/mongos_start.sh
      - mongos
      - --configdb
      - configset/config-r0:27017,config-r1:27017,config-r2:27017
    depends_on:
      - config-r0
      - config-r1
      - config-r2
    networks:
      - mainnet
    deploy:
      replicas: 1

  # Config replica set
  config-r0:
    image: reco-storage-mongodb
    volumes:
      - cfr0:/data/db
    entrypoint:
      - mongod
      - --port
      - "27017"
      - --configsvr
      - --replSet
      - "configset"
      - --dbpath
      - /data/db
      - --smallfiles
    networks:
      - mainnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.config == true
          - node.labels.replicanum == 0

  config-r1:
    image: reco-storage-mongodb
    volumes:
      - cfr1:/data/db
    entrypoint:
      - mongod
      - --port
      - "27017"
      - --configsvr
      - --replSet
      - "configset"
      - --dbpath
      - /data/db
      - --smallfiles
    networks:
      - mainnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.config == true
          - node.labels.replicanum == 1

  config-r2:
    image: reco-storage-mongodb
    volumes:
      - cfr2:/data/db
    entrypoint:
      - mongod
      - --port
      - "27017"
      - --configsvr
      - --replSet
      - "configset"
      - --dbpath
      - /data/db
      - --smallfiles
    networks:
      - mainnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.config == true
          - node.labels.replicanum == 2
  
  # Shard 0 replica set
  shard0-r0:
    image: reco-storage-mongodb
    volumes:
      - s0r0:/data/db
    entrypoint:
      - mongod
      - --port
      - "27018"
      - --shardsvr
      - --replSet
      - "shard0set"
      - --dbpath
      - /data/db
      - --smallfiles
    networks:
      - mainnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.shard0 == true
          - node.labels.replicanum == 0

  shard0-r1:
    image: reco-storage-mongodb
    volumes:
      - s0r1:/data/db
    entrypoint:
      - mongod
      - --port
      - "27018"
      - --shardsvr
      - --replSet
      - "shard0set"
      - --dbpath
      - /data/db
      - --smallfiles
    networks:
      - mainnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.shard0 == true
          - node.labels.replicanum == 1

  shard0-r2:
    image: reco-storage-mongodb
    volumes:
      - s0r2:/data/db
    entrypoint:
      - mongod
      - --port
      - "27018"
      - --shardsvr
      - --replSet
      - "shard0set"
      - --dbpath
      - /data/db
      - --smallfiles
    networks:
      - mainnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.shard0 == true
          - node.labels.replicanum == 2

  # Shard 1 replica set
  shard1-r0:
    image: reco-storage-mongodb
    volumes:
      - s1r0:/data/db
    entrypoint:
      - mongod
      - --port
      - "27019"
      - --shardsvr
      - --replSet
      - "shard1set"
      - --dbpath
      - /data/db
      - --smallfiles
    networks:
      - mainnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.shard1 == true
          - node.labels.replicanum == 0

  shard1-r1:
    image: reco-storage-mongodb
    volumes:
      - s1r1:/data/db
    entrypoint:
      - mongod
      - --port
      - "27019"
      - --shardsvr
      - --replSet
      - "shard1set"
      - --dbpath
      - /data/db
      - --smallfiles
    networks:
      - mainnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.shard1 == true
          - node.labels.replicanum == 1

  shard1-r2:
    image: reco-storage-mongodb
    volumes:
      - s1r2:/data/db
    entrypoint:
      - mongod
      - --port
      - "27019"
      - --shardsvr
      - --replSet
      - "shard1set"
      - --dbpath
      - /data/db
      - --smallfiles
    networks:
      - mainnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.shard1 == true
          - node.labels.replicanum == 2

  # Shard 2 replica set
  shard2-r0:
    image: reco-storage-mongodb
    volumes:
      - s2r0:/data/db
    entrypoint:
      - mongod
      - --port
      - "27020"
      - --shardsvr
      - --replSet
      - "shard2set"
      - --dbpath
      - /data/db
      - --smallfiles
    networks:
      - mainnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.shard2 == true
          - node.labels.replicanum == 0

  shard2-r1:
    image: reco-storage-mongodb
    volumes:
      - s2r1:/data/db
    entrypoint:
      - mongod
      - --port
      - "27020"
      - --shardsvr
      - --replSet
      - "shard2set"
      - --dbpath
      - /data/db
      - --smallfiles
    networks:
      - mainnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.shard2 == true
          - node.labels.replicanum == 1

  shard2-r2:
    image: reco-storage-mongodb
    volumes:
      - s2r2:/data/db
    entrypoint:
      - mongod
      - --port
      - "27020"
      - --shardsvr
      - --replSet
      - "shard2set"
      - --dbpath
      - /data/db
      - --smallfiles
    networks:
      - mainnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.shard2 == true
          - node.labels.replicanum == 2

volumes:
  cfr0:
  cfr1:
  cfr2:
  s0r0:
  s0r1:
  s0r2:
  s1r0:
  s1r1:
  s1r2:
  s2r0:
  s2r1:
  s2r2:

networks:
  mainnet:
    external: true